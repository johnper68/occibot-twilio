/// <reference types="node" />
import { EventEmitter } from 'node:events';
export interface TwilioRequestBody {
    From: string;
    To: string;
    Body: string;
    NumMedia: string;
    MediaContentType0?: string;
    Latitude?: string;
    Longitude?: string;
}
export interface TwilioPayload {
    from: string;
    to: string;
    body: string;
}
/**
 * Encargado de levantar un servidor HTTP con una hook url
 * [POST] /twilio-hook
 */
declare class TwilioWebHookServer extends EventEmitter {
    private twilioServer;
    private twilioPort;
    constructor(twilioPort: number);
    /**
     * Mensaje entrante
     * emit: 'message'
     * @param req
     * @param res
     */
    private incomingMsg;
    /**
     * Manejar los local media como
     * C:\\Projects\\bot-restaurante\\tmp\\menu.png
     * para que puedas ser llevar a una url online
     * @param req
     * @param res
     */
    private handlerLocalMedia;
    /**
     * Construir HTTP Server
     * @returns Polka instance
     */
    private buildHTTPServer;
    /**
     * Iniciar el servidor HTTP
     */
    start(): void;
    stop(): Promise<void>;
}
export { TwilioWebHookServer };
//# sourceMappingURL=server.d.ts.map